name: Remote Update

on:
  workflow_dispatch:
    inputs:
      files_json:
        description: >
          JSON-словарь: {"index.html":"<base64>", "styles.css":"<base64>", "site.js":"<base64>", "sub/dir/file.txt":"<base64>"}
        required: true
      commit_message:
        description: Сообщение коммита
        required: false
        default: "remote update"
      branch:
        description: Ветка для коммита (напр. main)
        required: false
        default: "main"

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Применить файлы из JSON (base64 → файлы)
        run: |
          echo '${{ github.event.inputs.files_json }}' > payload.json
          node - <<'NODE'
          const fs = require('fs');
          const path = require('path');
          const raw = fs.readFileSync('payload.json','utf8').trim();
          if (!raw) { console.error('payload.json пуст'); process.exit(1); }
          let data;
          try { data = JSON.parse(raw); } catch(e) {
            console.error('Не удалось распарсить JSON:', e.message);
            process.exit(1);
          }
          const keys = Object.keys(data);
          if (keys.length === 0) { console.log('Нет файлов для обновления'); process.exit(0); }
          for (const p of keys) {
            const b64 = data[p];
            if (typeof b64 !== 'string') { console.warn('Пропущен (не строка):', p); continue; }
            const dir = path.dirname(p);
            fs.mkdirSync(dir, { recursive: true });
            const buf = Buffer.from(b64, 'base64');
            fs.writeFileSync(p, buf);
            console.log('Wrote', p, '('+buf.length+' bytes)');
          }
          NODE

      - name: Commit & Push
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "${{ github.event.inputs.commit_message }}" || echo "No changes to commit"
          git push origin HEAD:${{ github.event.inputs.branch }}
